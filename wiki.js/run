#!/bin/bash

function show_usage()
{
    printf "Usage: $0 <command>\n"
    cat <<EOF
    -u|--docker-compose-up
    -d|--docker-compose-down
    -c|--clean-all
    -s|--status
    -P|--login-to-postgresql
    -W|--login-to-wiki
    -g|--run-setup-postgresql (not needed currently)
    -h|--help
EOF
  exit 1
}

if [[ $# -lt 1 ]]; then
    show_usage $@
fi

function docker_login_postgresql()
{
    docker-compose exec postgresdb bash
}

function docker_login_wiki()
{
    docker-compose exec wiki bash
}

function docker_up()
{
    docker-compose up --detach
}

function docker_down()
{
    docker-compose down
}

function docker_clean_all()
{
    docker-compose rm -s -f
}

function docker_status()
{
    docker-compose ps -a
    docker-compose logs postgresdb | tail -10
    docker-compose logs wiki | tail -10
}

function setup_postgresql()
{
    ./postgresql/scripts/run-setup-from-outside-container.sh
}

while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -P|--login-postgresql)
        shift
        docker_login_postgresql
        ;;
    -W|--login-wiki)
        shift
        docker_login_wiki
        ;;
    -u|--docker-compose-up)
        shift
        docker_up
        ;;
    -d|--docker-compose-down)
        shift
        docker_down
        ;;
    -c|--clean-all)
        shift
        docker_clean_all
        ;;
    -s|--status)
        shift
        docker_status
        ;;
    -g|--run-setup-postgresql)
        shift
        setup_postgresql
        ;;
    -h|--help)
        show_usage
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done
